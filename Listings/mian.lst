C51 COMPILER V9.01   MIAN                                                                  05/31/2023 14:48:45 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MIAN
OBJECT MODULE PLACED IN .\Objects\mian.obj
COMPILER INVOKED BY: D:\LABORATORY\C51\BIN\C51.EXE mian.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\mian.lst)
                    - TABS(2) OBJECT(.\Objects\mian.obj)

line level    source

   1          #include<reg52.h>
   2          #include<intrins.h>
   3          #include<stdio.h>
   4          
   5          
   6          #define uchar unsigned char
   7          #define uint unsigned int
   8          typedef unsigned int u16; //对系统默认数据类型进行重定义
   9          typedef unsigned char u8;
  10          #define GPIO P1
  11          #define count 50000        //计数值，约为0.05s
  12          #define TH  (65536-count)/256  //定时器初始化设置
  13          #define TL  (65536-count)%256
  14          
  15          sbit LSA=P2^2;           //数码管位选设置
  16          sbit LSB=P2^3;
  17          sbit LSC=P2^4;
  18          sbit bee=P2^5;            //蜂鸣器  
  19          sbit LED=P2^0;            //LED灯
  20          sbit KEY1=P3^1;             //初始化K1
  21          int key=0;             //矩阵键盘按键标志
  22          int password[4];         //输入数字数组
  23          int right[4]={6,6,6,6};    //正确密码数组
  24          int temporary[4];        //零时密码数组
  25          uchar code DSY[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};  //数码管显示数字数组
  26          
  27          void delay(int n)        //延时函数
  28          { int t;
  29   1        while(n--)
  30   1        { for(t=0;t<12;t++);
  31   2        }
  32   1      }
  33          
  34          void uart_init(void);//串行口初始化
  35          void main()
  36          {
  37   1        int flag=1;
  38   1        int sign=0;          //重置密码位数
  39   1        int mark01=0;        //重置密码第一遍（原密码）标志
  40   1        int mark02=0;        //重置密码第二遍（原密码重复）标志
  41   1        int mark03=0;        //重置密码第三遍（新密码）标志
  42   1        int mark04=0;        //重置密码第四遍（新密码重复）标志
  43   1        int mistake=0;       //错误次数
  44   1        int temp=0;          //正确位数用来判断密码是否正确
  45   1        int N=0;           //输入位数   用来循环４次
  46   1        int i=0;           //计数
  47   1        int a=0;           //计数
  48   1        bee=0;              //初始化蜂鸣器
  49   1        TMOD&=0X0F;          //定时器初始化设置
  50   1        TMOD|=0X01;
  51   1        P2=0X03;
  52   1        uart_init();          //初始化串口
  53   1        while(1)
  54   1        {
C51 COMPILER V9.01   MIAN                                                                  05/31/2023 14:48:45 PAGE 2   

  55   2          while(1)           //进入循环
  56   2          {
  57   3            GPIO=0x0f;
  58   3            if(GPIO!=0x0f)       //判断按下
  59   3            {
  60   4              delay(100);
  61   4              if(GPIO!=0x0f)     //重新判断按下
  62   4              {
  63   5                switch(N)      //位选   
  64   5                      {
  65   6                          case(0):
  66   6                                  LSA=1;LSB=1;LSC=1; break;
  67   6                          case(1):
  68   6                                  LSA=0;LSB=1;LSC=1; break;
  69   6                          case(2):
  70   6                                  LSA=1;LSB=0;LSC=1; break;
  71   6                          case(3):
  72   6                                  LSA=0;LSB=0;LSC=1; break;
  73   6                }
  74   5                GPIO=0X0F;            //测试列
  75   5                  switch(GPIO)
  76   5                  {
  77   6                    case(0x07):key=0;break;
  78   6                    case(0x0b):key=1;break;
  79   6                    case(0x0d):key=2;break;
  80   6                    case(0x0e):key=3;break;
  81   6                  }            //测试行
  82   5                GPIO=0XF0;
  83   5                switch(GPIO)
  84   5                  {
  85   6                    case(0x70):key=key;break;
  86   6                    case(0xb0):key=key+4;break;
  87   6                    case(0xd0):key=key+8;break;
  88   6                    case(0xe0):key=key+12;break;
  89   6                  }
  90   5                password[N]=key;        //保存按键输入
  91   5                if(mark03==1)           //第三遍密码标志开启时，将输入新密码保存到临时密码数组中
  92   5                {
  93   6                  temporary[N]=key;
  94   6                }
  95   5                if(key==right[N])       //判断这一位密码是否正确并计数
  96   5                   temp++;
  97   5                if(key == 12&&mark01==1){
  98   6                  sign=4;
  99   6                  break;
 100   6                }
 101   5                if(key ==13){
 102   6                LSA = 1; LSB = 1; LSC = 1;
 103   6                P0 = 0x00; // 显示第一位
 104   6                LSA = 0; LSB = 1; LSC = 1;
 105   6                P0 = 0x00; // 显示第二位
 106   6                LSA = 1; LSB = 0; LSC = 1;
 107   6                P0 = 0x00; // 显示第三位
 108   6                LSA = 0; LSB = 0; LSC = 1;
 109   6                P0 = 0x00; // 显示第四位    
 110   6                mark03=1;
 111   6                  break;
 112   6      }
 113   5              if (key == 14) 
 114   5            {
 115   6                while (1) 
 116   6                        {
C51 COMPILER V9.01   MIAN                                                                  05/31/2023 14:48:45 PAGE 3   

 117   7                LSA = 1; LSB = 1; LSC = 1;
 118   7                P0 = 0x40; // 显示第一位
 119   7                LSA = 0; LSB = 1; LSC = 1;
 120   7                P0 = 0x40; // 显示第二位
 121   7                LSA = 1; LSB = 0; LSC = 1;
 122   7                P0 = 0x40; // 显示第三位
 123   7                LSA = 0; LSB = 0; LSC = 1;
 124   7                P0 = 0x40; // 显示第四位
 125   7                        }
 126   6                        N=0;
 127   6              }
 128   5      
 129   5                if(key==15)           //重新输入密码功能
 130   5                  {
 131   6                    N=0;
 132   6                   if(mark01==1)        //输入正确密码后按S16，可输入第二遍密码
 133   6                   {
 134   7                     mark02=1;          //第二遍密码标志开启
 135   7                     mark01=0;
 136   7                    }
 137   6                   break;
 138   6                  }
 139   5                while((GPIO!=0xf0)&&(i<500))  //按键弹起
 140   5                {
 141   6                  delay(100);
 142   6                  i++;
 143   6                }
 144   5                i=0;
 145   5                while(1)            //进入显示循环
 146   5                  {
 147   6                    while(1)
 148   6                    {
 149   7                     LSA=1;LSB=1;LSC=1;   //显示第一位
 150   7                     key=password[0];
 151   7                     P0=0x40;
 152   7                     delay(15);  
 153   7                     if(N==0)       
 154   7                     break;
 155   7                     LSA=0;LSB=1;LSC=1;   //显示第二位
 156   7                     key=password[1];
 157   7                     P0=0x40;
 158   7                     delay(15);
 159   7                     if(N==1)
 160   7                     break;
 161   7                     LSA=1;LSB=0;LSC=1;  //显示第三位
 162   7                     key=password[2];
 163   7                     P0=0x40;
 164   7                     delay(15);
 165   7                     if(N==2)
 166   7                     break;
 167   7                     LSA=0;LSB=0;LSC=1;  //显示第四位
 168   7                     key=password[3];
 169   7                     P0=0x40;
 170   7                     delay(15);
 171   7                     if(N==3)
 172   7                     break;
 173   7                    }
 174   6                    if(GPIO!=0xf0)     //按键再次按下退出循环
 175   6                    { delay(100);
 176   7                      if(GPIO!=0xf0)
 177   7                      break;
 178   7                    }
C51 COMPILER V9.01   MIAN                                                                  05/31/2023 14:48:45 PAGE 4   

 179   6                  }
 180   5              N++;   
 181   5              }
 182   4            }
 183   3            if(N==4)                  //四位密码输入完成
 184   3            {
 185   4              if(mark03==1)           //第三遍密码标志开启并输入完四位新密码后，可进行第四遍密码输入
 186   4              {
 187   5               mark04=1;
 188   5               mark03=0;
 189   5              }
 190   4              if(temp!=4)           //输入错误，计数加一
 191   4              mistake++;
 192   4              while((GPIO!=0xf0)&&(i<500))  //按键弹起
 193   4                { 
 194   5                  delay(100);
 195   5                  i++;
 196   5                }
 197   4                i=0;
 198   4              if(sign==4)           //第三遍密码与第四遍密码相同时，将此密码设置为新密码
 199   4              {
 200   5                delay(15);
 201   5                right[0]=temporary[0];
 202   5                right[1]=temporary[1];
 203   5                right[2]=temporary[2];
 204   5                right[3]=temporary[3];
 205   5                printf("right[i]=");
 206   5                for(i=0;i<4;i++){
 207   6                printf("%d",right[i]);
 208   6                }
 209   5                printf("\n");
 210   5                sign=0;
 211   5                mark04=0;
 212   5                mistake=0;
 213   5                for(flag=1;flag<100;flag++) //密码修改正确蜂鸣器响
 214   5                {
 215   6                  bee=~bee;
 216   6                  delay(15);
 217   6                }
 218   5              }
 219   4      
 220   4      
 221   4              while(1)            //进入显示循环
 222   4              {
 223   5                while(1)
 224   5                {
 225   6                    LSA=1;LSB=1;LSC=1;     //第一位显示
 226   6                    LSA=0;LSB=1;LSC=1;    //显示第二位
 227   6                    LSA=1;LSB=0;LSC=1;   //显示第三位
 228   6                    LSA=0;LSB=0;LSC=1;   //显示第四位
 229   6                    if(temp==4)       //密码正确显示8888
 230   6                  {
 231   7                          for(flag=1;flag<10;flag++)  //密码修改正确蜂鸣器响
 232   7                            {
 233   8                          bee=~bee;
 234   8                          delay(15);
 235   8                            }
 236   7                   mistake=0;
 237   7                   P0=DSY[8];
 238   7                   mark01=1;        //密码输入正确时，第一遍密码标志开启
 239   7                   if(mark02==1)      //第二遍密码标志开启并第二遍输入密码正确时，第三遍密码标志开启
 240   7                   {
C51 COMPILER V9.01   MIAN                                                                  05/31/2023 14:48:45 PAGE 5   

 241   8                     mark03=1;
 242   8                     mark02=0;
 243   8                   }
 244   7                  }
 245   6                   else         //密码错误显示0
 246   6                  {
 247   7                    P0=0x00;
 248   7                    LSA=1;LSB=1;LSC=1;     //第一位显示
 249   7                    LSA=0;LSB=1;LSC=1;    //显示第二位
 250   7                    LSA=1;LSB=0;LSC=1;   //显示第三位
 251   7                    LSA=0;LSB=0;LSC=1;   //显示第四位
 252   7                    P0=0x76;
 253   7                   if(mistake==3)     //错误次数为3时
 254   7                   {LED=0;
 255   8                    for(a=0;a<10;a++)
 256   8                    { 
 257   9                      TH0=TH;
 258   9                      TL0=TL;
 259   9                      TR0=1;
 260   9                      bee=~bee;             //蜂鸣器响
 261   9                      LSA=1;LSB=1;LSC=1;  //数码管循环显示
 262   9                      P0=DSY[8];
 263   9                      delay(50); 
 264   9                      LSA=0;LSB=1;LSC=1;
 265   9                      P0=DSY[8];
 266   9                      delay(50);
 267   9                      LSA=1;LSB=0;LSC=1;
 268   9                      P0=DSY[8];
 269   9                      delay(50);
 270   9                      LSA=0;LSB=0;LSC=1;
 271   9                      P0=DSY[8];
 272   9                      delay(50);
 273   9                      LSA=1;LSB=1;LSC=0;
 274   9                      P0=DSY[8];
 275   9                      delay(50);
 276   9                      LSA=0;LSB=1;LSC=0;
 277   9                      P0=DSY[8];
 278   9                      delay(50);
 279   9                      LSA=1;LSB=0;LSC=0;
 280   9                      P0=DSY[8];
 281   9                      delay(50);
 282   9                      LSA=0;LSB=0;LSC=0;
 283   9                      P0=DSY[8];
 284   9                      delay(50);
 285   9                    }
 286   8                   mistake=0;         //错误次数重置
 287   8                   LED=1;
 288   8                   }
 289   7                   
 290   7                  }
 291   6                  break;
 292   6                }
 293   5                if(GPIO!=0xf0)       //按键再次按下退出循环
 294   5                { delay(100);
 295   6                  if(GPIO!=0xf0)
 296   6                  break;
 297   6                }
 298   5              }
 299   4              N=0;             //密码位数重置
 300   4              temp=0;
 301   4            } 
 302   3          }
C51 COMPILER V9.01   MIAN                                                                  05/31/2023 14:48:45 PAGE 6   

 303   2        
 304   2        }
 305   1      }
 306          void uart_init(void)
 307          {
 308   1        TMOD=0x20;//即0010 0000,定时器/计数器1,工作方式2
 309   1        TH1=0xfd;//设置波特率为9600
 310   1        TL1=0xfd;
 311   1        TR1=1;//启动定时器/计数器1
 312   1        
 313   1        SCON=0x50; //0101 0000.串口工作方式1，允许串行控制
 314   1        PCON=0x00;//设置SMOD=0
 315   1        IE=0x90; //CPU允许中断，串行允许中断
 316   1        
 317   1        TI=1;//直接使用printf必须加入此句才能实现发送
 318   1      }
 319           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1218    ----
   CONSTANT SIZE    =     25    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26      22
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
